language: cpp

sudo: required

branches:
  only:
  - master

matrix:
  include:
  # minimal gcc version (also on loewe cluster)
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - libboost-all-dev
          - g++-4.8
    env:
      - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
  # most recent gcc version
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - libboost-all-dev
          - g++-8
    env:
      - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
  # clang on linux
  - os: linux
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-3.6
        packages:
          - libboost-all-dev
          - clang-3.6
    env:
      - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
  # most recent xcode (changes also clang version)
  - os: osx
    osx_image: xcode10
    addons:
      homebrew:
        packages:
        - boost
    env:
      - MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
  - eval "${MATRIX_EVAL}"
  - export SMASH_ROOT=$(pwd)
  # pythia
  - wget http://home.thep.lu.se/~torbjorn/pythia8/pythia8235.tgz &&
    tar xf pythia8235.tgz && rm pythia8235.tgz &&
    cd pythia8235 &&
    ./configure --cxx-common='-std=c++11 -march=native -mfpmath=sse -O3 -fPIC' &&
    make -j2 &&
    cd ..
  # clang-format
  - if [ $TRAVIS_OS_NAME = osx ]; then curl -# -o clang6_0_0.tar.xz http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-apple-darwin.tar.xz;
    else  curl -# -o clang6_0_0.tar.xz http://releases.llvm.org/6.0.0/clang+llvm-6.0.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz; fi &&
    mkdir clang6_0_0 && tar -xf clang6_0_0.tar.xz -C clang6_0_0 --strip-components=1 &&
    export PATH=$SMASH_ROOT/clang6_0_0/bin/:$PATH
  # gsl
  - wget http://ftpmirror.gnu.org/gsl/gsl-1.15.tar.gz &&
    tar -zxf gsl-1.15.tar.gz && rm gsl-1.15.tar.gz &&
    export GSL=$(pwd)/gsl-1.15 &&
    cd $GSL &&
    ./configure --prefix $GSL &&
    make -j2 --silent &&
    make install --silent &&
    cd $SMASH_ROOT
  # eigen
  - wget http://bitbucket.org/eigen/eigen/get/3.3.5.tar.gz &&
    tar -xf 3.3.5.tar.gz -C $HOME
  # cpplint
  - pip install --user cpplint

install:
  - cd $SMASH_ROOT
  - mkdir build
  - cd build
  - cmake -DPythia_CONFIG_EXECUTABLE=$SMASH_ROOT/pythia8235/bin/pythia8-config -DCMAKE_INSTALL_PREFIX=$HOME/eigen-eigen-b3f3d4950030/ -DGSL_ROOT_DIR=$GSL ..
  - make -j2

script:
  - ./../bin/clang-format-helper.sh -t
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -j2
